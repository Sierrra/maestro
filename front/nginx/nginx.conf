    server {
    	listen 80;
    	server_name maestro.fun;
    	location / {
        	return 301 https://$host$request_uri;
    		}
	location /.well-known/acme-challenge/ {
    		root /var/www/certbot;
		}	
	}
    server {
        listen 443 ssl;
	server_name maestro.fun;
        root /var/www;
        index index.html index.htm;
	ssl_certificate /etc/letsencrypt/live/maestro.fun/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/maestro.fun/privkey.pem;
        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
            expires -1;
            # access_log logs/static.log; # I don't usually include a static log
        }

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            try_files $uri $uri/ /index.html;
        }

        location /audio {
            add_header 'Access-Control-Allow-Origin' '*' ;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            proxy_pass http://go:8090/audio;
        }

        location /get_similar {
            client_max_body_size 150m;
            add_header 'Access-Control-Allow-Origin' '*' ;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            proxy_pass http://go:8090/get_similar;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }

        location /static/ {
            root /var/www;
        }
    }
